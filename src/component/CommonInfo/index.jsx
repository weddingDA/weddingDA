import { Container, Leafs, Info, Title, Text, Leafs2 } from "./styles";
import { useIsInViewport } from "../../hooks/useIsInViewport";
import { useRef, useEffect, useState } from "react";

export default function CommonInfo() {
  const ref1 = useRef(null);
  const refText = useRef(null);

  const [isLoadedTitle, setIsLoadedTitle] = useState(false);

  const [isLoadedText, setIsLoadedText] = useState(false);

  const isInViewport1 = useIsInViewport(ref1);
  const isInViewportText = useIsInViewport(refText);

  useEffect(() => {
    // üëáÔ∏è listen for changes
    if (!isLoadedTitle && isInViewport1) setIsLoadedTitle(true);
    if (!isLoadedText && isInViewportText) setIsLoadedText(true);
  }, [isInViewport1, isInViewportText]);

  return (
    <Container>
      <Info>
        {isLoadedTitle ? (
          <Title key='displayesTitle' ref={ref1}>
            –°–í–ê–î–ï–ë–ù–´–ô –û–†–ì–ê–ù–ò–ó–ê–¢–û–†
          </Title>
        ) : (
          <Title key='hiddenTitle' ref={ref1}>
            <br />
          </Title>
        )}
        {isLoadedText ? (
          <Text key='displayesText' ref={refText}>
            –ï—Å–ª–∏ –≤—ã –∑–∞–±–ª—É–¥–∏–ª–∏—Å—å, –≥–æ—Ç–æ–≤–∏—Ç–µ –Ω–∞–º —Å—é—Ä–ø—Ä–∏–∑ –∏–ª–∏ —É –≤–∞—Å –ø–æ—è–≤–∏–ª–∏—Å—å
            –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, –≤–∞–º —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–∂–µ—Ç –Ω–∞—à –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä:
          </Text>
        ) : (
          <Text key='hiddenText' ref={refText}>
            <br /> <br /> <br /> <br />
          </Text>
        )}
        <Title>–ö—Å–µ–Ω–∏—è</Title>
        <a href='tel:89272751199' style={{ textDecoration: "none" }}>
          –¢–µ–ª. +79272751199
        </a>
        <Title>–ü–æ–∂–µ–ª–∞–Ω–∏—è</Title>

        <Text>
          –ú—ã –Ω–µ —Ö–æ—Ç–∏–º —É—Ç—Ä—É–∂–¥–∞—Ç—å –≤–∞—Å –≤—ã–±–æ—Ä–æ–º –ø–æ–¥–∞—Ä–∫–∞, –ø–æ—ç—Ç–æ–º—É –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—à–µ–º—É
          –≤–∫–ª–∞–¥—É –≤ –±—é–¥–∂–µ—Ç –Ω–∞—à–µ–π –º–æ–ª–æ–¥–æ–π —Å–µ–º—å–∏.
        </Text>
        <Leafs2 />
        <Leafs />
      </Info>
    </Container>
  );
}
